--- AUTOGENERATED by crow utility
-- github.com/monome/crow/util/ii_norns_actions.lua

-- run from crow project root directory:
--      lua util/ii_norns_actions.lua lua/ii/ <norns_path>/lua/core/crow/ii_actions.lua

local actions = {}

actions.init = function()
  actions.ansible.event = function(i,v) print("ansible ii: "..i.." "..v) end
  actions.crow.event = function(i,v) print("crow ii: "..i.." "..v) end
  actions.faders.event = function(i,v) print("faders ii: "..i.." "..v) end
  actions.kria.event = function(i,v) print("kria ii: "..i.." "..v) end
  actions.levels.event = function(i,v) print("levels ii: "..i.." "..v) end
  actions.meadowphysics.event = function(i,v) print("meadowphysics ii: "..i.." "..v) end
  actions.txi.event = function(i,v) print("txi ii: "..i.." "..v) end
  actions.wslash.event = function(i,v) print("wslash ii: "..i.." "..v) end
end

actions.ansible = {}
actions.ansible.help = function() crow.send("ii.ansible.help()") end
actions.ansible.trigger = function(channel,state) crow.send("ii.ansible.trigger("..channel..","..state..")") end
actions.ansible.trigger_toggle = function(channel) crow.send("ii.ansible.trigger_toggle("..channel..")") end
actions.ansible.trigger_pulse = function(channel) crow.send("ii.ansible.trigger_pulse("..channel..")") end
actions.ansible.trigger_time = function(channel,time) crow.send("ii.ansible.trigger_time("..channel..","..time..")") end
actions.ansible.trigger_polarity = function(channel,polarity) crow.send("ii.ansible.trigger_polarity("..channel..","..polarity..")") end
actions.ansible.cv = function(channel,volts) crow.send("ii.ansible.cv("..channel..","..volts..")") end
actions.ansible.cv_slew = function(channel,time) crow.send("ii.ansible.cv_slew("..channel..","..time..")") end
actions.ansible.cv_offset = function(channel,volts) crow.send("ii.ansible.cv_offset("..channel..","..volts..")") end
actions.ansible.cv_set = function(channel,volts) crow.send("ii.ansible.cv_set("..channel..","..volts..")") end

actions.crow = {}
actions.crow.help = function() crow.send("ii.crow.help()") end
actions.crow.output = function(channel,level) crow.send("ii.crow.output("..channel..","..level..")") end
actions.crow.slew = function(channel,time) crow.send("ii.crow.slew("..channel..","..time..")") end
actions.crow.call1 = function(arg) crow.send("ii.crow.call1("..arg..")") end
actions.crow.call2 = function(arg1,arg2) crow.send("ii.crow.call2("..arg1..","..arg2..")") end
actions.crow.call3 = function(arg1,arg2,arg3) crow.send("ii.crow.call3("..arg1..","..arg2..","..arg3..")") end
actions.crow.call4 = function(arg1,arg2,arg3,arg4) crow.send("ii.crow.call4("..arg1..","..arg2..","..arg3..","..arg4..")") end

actions.er301 = {}
actions.er301.help = function() crow.send("ii.er301.help()") end
actions.er301.tr = function(port,state) crow.send("ii.er301.tr("..port..","..state..")") end
actions.er301.tr_tog = function(port) crow.send("ii.er301.tr_tog("..port..")") end
actions.er301.tr_pulse = function(port) crow.send("ii.er301.tr_pulse("..port..")") end
actions.er301.tr_time = function(port,ms) crow.send("ii.er301.tr_time("..port..","..ms..")") end
actions.er301.tr_pol = function(port,rising) crow.send("ii.er301.tr_pol("..port..","..rising..")") end
actions.er301.cv = function(port,volts) crow.send("ii.er301.cv("..port..","..volts..")") end
actions.er301.cv_slew = function(port,ms) crow.send("ii.er301.cv_slew("..port..","..ms..")") end
actions.er301.cv_set = function(port,volts) crow.send("ii.er301.cv_set("..port..","..volts..")") end
actions.er301.cv_off = function(port,volts) crow.send("ii.er301.cv_off("..port..","..volts..")") end

actions.faders = {}
actions.faders.help = function() crow.send("ii.faders.help()") end

actions.jf = {}
actions.jf.help = function() crow.send("ii.jf.help()") end
actions.jf.trigger = function(channel,state) crow.send("ii.jf.trigger("..channel..","..state..")") end
actions.jf.run_mode = function(mode) crow.send("ii.jf.run_mode("..mode..")") end
actions.jf.run = function(volts) crow.send("ii.jf.run("..volts..")") end
actions.jf.transpose = function(pitch) crow.send("ii.jf.transpose("..pitch..")") end
actions.jf.vtrigger = function(channel,level) crow.send("ii.jf.vtrigger("..channel..","..level..")") end
actions.jf.mode = function(mode) crow.send("ii.jf.mode("..mode..")") end
actions.jf.tick = function(clock_or_bpm) crow.send("ii.jf.tick("..clock_or_bpm..")") end
actions.jf.play_voice = function(channel,pitch_divs,level_repeats) crow.send("ii.jf.play_voice("..channel..","..pitch_divs..","..level_repeats..")") end
actions.jf.play_note = function(pitch_divs,level_repeats) crow.send("ii.jf.play_note("..pitch_divs..","..level_repeats..")") end
actions.jf.god_mode = function(state) crow.send("ii.jf.god_mode("..state..")") end
actions.jf.retune = function(channel,numerator,denominator) crow.send("ii.jf.retune("..channel..","..numerator..","..denominator..")") end
actions.jf.quantize = function(divisions) crow.send("ii.jf.quantize("..divisions..")") end

actions.kria = {}
actions.kria.help = function() crow.send("ii.kria.help()") end
actions.kria.preset = function(number) crow.send("ii.kria.preset("..number..")") end
actions.kria.pattern = function(number) crow.send("ii.kria.pattern("..number..")") end
actions.kria.scale = function(number) crow.send("ii.kria.scale("..number..")") end
actions.kria.period = function(time) crow.send("ii.kria.period("..time..")") end
actions.kria.position = function(track,param,pos) crow.send("ii.kria.position("..track..","..param..","..pos..")") end
actions.kria.loop_start = function(track,param,pos) crow.send("ii.kria.loop_start("..track..","..param..","..pos..")") end
actions.kria.loop_length = function(track,param,pos) crow.send("ii.kria.loop_length("..track..","..param..","..pos..")") end
actions.kria.reset = function(track,param) crow.send("ii.kria.reset("..track..","..param..")") end
actions.kria.mute = function(track,state) crow.send("ii.kria.mute("..track..","..state..")") end
actions.kria.toggle_mute = function(track) crow.send("ii.kria.toggle_mute("..track..")") end
actions.kria.clock = function(track) crow.send("ii.kria.clock("..track..")") end
actions.kria.page = function(page) crow.send("ii.kria.page("..page..")") end
actions.kria.cue = function(pattern) crow.send("ii.kria.cue("..pattern..")") end
actions.kria.direction = function(track,direction) crow.send("ii.kria.direction("..track..","..direction..")") end

actions.levels = {}
actions.levels.help = function() crow.send("ii.levels.help()") end
actions.levels.preset = function(number) crow.send("ii.levels.preset("..number..")") end
actions.levels.reset = function(now) crow.send("ii.levels.reset("..now..")") end
actions.levels.position = function(pos) crow.send("ii.levels.position("..pos..")") end
actions.levels.loop_start = function(pos) crow.send("ii.levels.loop_start("..pos..")") end
actions.levels.loop_length = function(pos) crow.send("ii.levels.loop_length("..pos..")") end
actions.levels.loop_direction = function(direction) crow.send("ii.levels.loop_direction("..direction..")") end

actions.meadowphysics = {}
actions.meadowphysics.help = function() crow.send("ii.meadowphysics.help()") end
actions.meadowphysics.preset = function(number) crow.send("ii.meadowphysics.preset("..number..")") end
actions.meadowphysics.reset = function(track) crow.send("ii.meadowphysics.reset("..track..")") end
actions.meadowphysics.stop = function(track) crow.send("ii.meadowphysics.stop("..track..")") end
actions.meadowphysics.scale = function(number) crow.send("ii.meadowphysics.scale("..number..")") end
actions.meadowphysics.period = function(time) crow.send("ii.meadowphysics.period("..time..")") end

actions.txi = {}
actions.txi.help = function() crow.send("ii.txi.help()") end

actions.txo = {}
actions.txo.help = function() crow.send("ii.txo.help()") end
actions.txo.tr = function(port,state) crow.send("ii.txo.tr("..port..","..state..")") end
actions.txo.tr_tog = function(port) crow.send("ii.txo.tr_tog("..port..")") end
actions.txo.tr_pulse = function(port) crow.send("ii.txo.tr_pulse("..port..")") end
actions.txo.tr_time = function(port,ms) crow.send("ii.txo.tr_time("..port..","..ms..")") end
actions.txo.tr_pol = function(port,rising) crow.send("ii.txo.tr_pol("..port..","..rising..")") end
actions.txo.tr_time_s = function(port,s) crow.send("ii.txo.tr_time_s("..port..","..s..")") end
actions.txo.tr_time_m = function(port,m) crow.send("ii.txo.tr_time_m("..port..","..m..")") end
actions.txo.tr_pulse_div = function(port,pulses) crow.send("ii.txo.tr_pulse_div("..port..","..pulses..")") end
actions.txo.tr_m = function(port,ms) crow.send("ii.txo.tr_m("..port..","..ms..")") end
actions.txo.tr_m_s = function(port,s) crow.send("ii.txo.tr_m_s("..port..","..s..")") end
actions.txo.tr_m_m = function(port,m) crow.send("ii.txo.tr_m_m("..port..","..m..")") end
actions.txo.tr_m_bpm = function(port,bpm) crow.send("ii.txo.tr_m_bpm("..port..","..bpm..")") end
actions.txo.tr_m_act = function(port,state) crow.send("ii.txo.tr_m_act("..port..","..state..")") end
actions.txo.tr_m_sync = function(port,state) crow.send("ii.txo.tr_m_sync("..port..","..state..")") end
actions.txo.tr_m_width = function(port,width) crow.send("ii.txo.tr_m_width("..port..","..width..")") end
actions.txo.tr_m_count = function(port,count) crow.send("ii.txo.tr_m_count("..port..","..count..")") end
actions.txo.tr_m_mul = function(port,mult) crow.send("ii.txo.tr_m_mul("..port..","..mult..")") end
actions.txo.tr_pulse_mute = function(port,state) crow.send("ii.txo.tr_pulse_mute("..port..","..state..")") end
actions.txo.cv = function(port,volts) crow.send("ii.txo.cv("..port..","..volts..")") end
actions.txo.cv_slew = function(port,ms) crow.send("ii.txo.cv_slew("..port..","..ms..")") end
actions.txo.cv_set = function(port,volts) crow.send("ii.txo.cv_set("..port..","..volts..")") end
actions.txo.cv_off = function(port,volts) crow.send("ii.txo.cv_off("..port..","..volts..")") end
actions.txo.cv_slew_s = function(port,s) crow.send("ii.txo.cv_slew_s("..port..","..s..")") end
actions.txo.cv_slew_m = function(port,m) crow.send("ii.txo.cv_slew_m("..port..","..m..")") end
actions.txo.cv_qt = function(port,qt) crow.send("ii.txo.cv_qt("..port..","..qt..")") end
actions.txo.cv_qt_set = function(port,qt) crow.send("ii.txo.cv_qt_set("..port..","..qt..")") end
actions.txo.cv_n = function(port,note) crow.send("ii.txo.cv_n("..port..","..note..")") end
actions.txo.cv_n_set = function(port,note) crow.send("ii.txo.cv_n_set("..port..","..note..")") end
actions.txo.cv_scale = function(port,scale) crow.send("ii.txo.cv_scale("..port..","..scale..")") end
actions.txo.cv_log = function(port,scale) crow.send("ii.txo.cv_log("..port..","..scale..")") end
actions.txo.osc = function(port,volts) crow.send("ii.txo.osc("..port..","..volts..")") end
actions.txo.osc_set = function(port,volts) crow.send("ii.txo.osc_set("..port..","..volts..")") end
actions.txo.osc_qt = function(port,volts) crow.send("ii.txo.osc_qt("..port..","..volts..")") end
actions.txo.osc_qt_set = function(port,volts) crow.send("ii.txo.osc_qt_set("..port..","..volts..")") end
actions.txo.osc_n = function(port,note) crow.send("ii.txo.osc_n("..port..","..note..")") end
actions.txo.osc_n_set = function(port,note) crow.send("ii.txo.osc_n_set("..port..","..note..")") end
actions.txo.osc_fq = function(port,fq) crow.send("ii.txo.osc_fq("..port..","..fq..")") end
actions.txo.osc_fq_set = function(port,fq) crow.send("ii.txo.osc_fq_set("..port..","..fq..")") end
actions.txo.osc_lfo = function(port,fq) crow.send("ii.txo.osc_lfo("..port..","..fq..")") end
actions.txo.osc_lfo_set = function(port,fq) crow.send("ii.txo.osc_lfo_set("..port..","..fq..")") end
actions.txo.osc_wave = function(port,wave) crow.send("ii.txo.osc_wave("..port..","..wave..")") end
actions.txo.osc_sync = function(port,sync) crow.send("ii.txo.osc_sync("..port..","..sync..")") end
actions.txo.osc_phase = function(port,phase) crow.send("ii.txo.osc_phase("..port..","..phase..")") end
actions.txo.osc_width = function(port,width) crow.send("ii.txo.osc_width("..port..","..width..")") end
actions.txo.osc_rect = function(port,pol) crow.send("ii.txo.osc_rect("..port..","..pol..")") end
actions.txo.osc_slew = function(port,ms) crow.send("ii.txo.osc_slew("..port..","..ms..")") end
actions.txo.osc_slew_s = function(port,s) crow.send("ii.txo.osc_slew_s("..port..","..s..")") end
actions.txo.osc_slew_m = function(port,m) crow.send("ii.txo.osc_slew_m("..port..","..m..")") end
actions.txo.osc_scale = function(port,scale) crow.send("ii.txo.osc_scale("..port..","..scale..")") end
actions.txo.osc_cyc = function(port,ms) crow.send("ii.txo.osc_cyc("..port..","..ms..")") end
actions.txo.osc_cyc_s = function(port,s) crow.send("ii.txo.osc_cyc_s("..port..","..s..")") end
actions.txo.osc_cyc_m = function(port,m) crow.send("ii.txo.osc_cyc_m("..port..","..m..")") end
actions.txo.osc_cyc_set = function(port,ms) crow.send("ii.txo.osc_cyc_set("..port..","..ms..")") end
actions.txo.osc_cyc_s_set = function(port,s) crow.send("ii.txo.osc_cyc_s_set("..port..","..s..")") end
actions.txo.osc_cyc_m_set = function(port,m) crow.send("ii.txo.osc_cyc_m_set("..port..","..m..")") end
actions.txo.osc_ctr = function(port,ctr) crow.send("ii.txo.osc_ctr("..port..","..ctr..")") end
actions.txo.env_act = function(port,state) crow.send("ii.txo.env_act("..port..","..state..")") end
actions.txo.env_att = function(port,ms) crow.send("ii.txo.env_att("..port..","..ms..")") end
actions.txo.env_att_s = function(port,s) crow.send("ii.txo.env_att_s("..port..","..s..")") end
actions.txo.env_att_m = function(port,m) crow.send("ii.txo.env_att_m("..port..","..m..")") end
actions.txo.env_dec = function(port,ms) crow.send("ii.txo.env_dec("..port..","..ms..")") end
actions.txo.env_dec_s = function(port,s) crow.send("ii.txo.env_dec_s("..port..","..s..")") end
actions.txo.env_dec_m = function(port,m) crow.send("ii.txo.env_dec_m("..port..","..m..")") end
actions.txo.env_trig = function(port,state) crow.send("ii.txo.env_trig("..port..","..state..")") end
actions.txo.env_eoc = function(port,state) crow.send("ii.txo.env_eoc("..port..","..state..")") end
actions.txo.env_eor = function(port,state) crow.send("ii.txo.env_eor("..port..","..state..")") end
actions.txo.env_loop = function(port,state) crow.send("ii.txo.env_loop("..port..","..state..")") end
actions.txo.env = function(port,state) crow.send("ii.txo.env("..port..","..state..")") end
actions.txo.kill = function(port) crow.send("ii.txo.kill("..port..")") end
actions.txo.tr_init = function(port) crow.send("ii.txo.tr_init("..port..")") end
actions.txo.cv_init = function(port) crow.send("ii.txo.cv_init("..port..")") end
actions.txo.cv_calib = function(port) crow.send("ii.txo.cv_calib("..port..")") end
actions.txo.cv_reset = function(port) crow.send("ii.txo.cv_reset("..port..")") end
actions.txo.init = function(unit) crow.send("ii.txo.init("..unit..")") end

actions.wslash = {}
actions.wslash.help = function() crow.send("ii.wslash.help()") end
actions.wslash.record = function(active) crow.send("ii.wslash.record("..active..")") end
actions.wslash.play = function(direction) crow.send("ii.wslash.play("..direction..")") end
actions.wslash.loop = function(state) crow.send("ii.wslash.loop("..state..")") end
actions.wslash.cue = function(destination) crow.send("ii.wslash.cue("..destination..")") end

return actions